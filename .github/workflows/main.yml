name: "publish"

on:
  push:
    branches:
      - main

jobs:
  publish-tauri:
    # Only run if the commit message includes 'release:app'
    if: contains(github.event.head_commit.message, 'release:app')
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # - platform: "macos-latest" # for Arm based macs (M1 and above).
          #   args: "--target aarch64-apple-darwin"
          # - platform: 'macos-latest' # for Intel based macs.
          #   args: '--target x86_64-apple-darwin'
          - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-22.04.
            args: "--verbose"
          # - platform: "windows-latest"
          #   args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev librsvg2-dev \
            patchelf build-essential libjavascriptcoregtk-4.1-dev libssl-dev \
            libgtk-3-dev libgdk-pixbuf2.0-dev libfuse2 libxau6
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: Install frontend dependencies
        run: npm install # change this to npm, pnpm or bun depending on which one you use.

      - uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: venv
          auto-update-conda: true
          channels: defaults,conda-forge
          python-version: 3.12

      - name: Build backend with PyInstaller (windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          conda install -n venv -c conda-forge gdal -y && ^
          pip install --no-cache-dir -r backend/requirements.txt && ^
          pyinstaller backend/apppy.py -y --distpath backend/ --specpath backend/ --workpath backend/build --name apppy ^
          --add-data "%CONDA%/envs/venv/Library/share/proj;Library/share/proj"
        shell: cmd

      - name: Build backend with PyInstaller
        if: matrix.platform != 'windows-latest'
        run: |
          conda install -n venv -c conda-forge gdal -y
          pip install --no-cache-dir -r backend/requirements.txt
          pyinstaller backend/apppy.py -y --distpath backend/ --specpath backend/ --workpath backend/build --name apppy \
          --add-data "$CONDA/envs/venv/share/proj:share/proj"
        shell: bash

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCS_KEY }}

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          project_id: "augmented-vim-442108-f7"
          version: "latest"

      - name: Unzip backend data
        run: gsutil -m cp -r gs://eccc-imwebs-viewer/Jenette_Creek_Watershed backend/apppy/_internal/

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

      - name: Upload Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "tauri-${{ matrix.platform }}-bundle"
          path: "src-tauri/target/**/release/bundle/"
